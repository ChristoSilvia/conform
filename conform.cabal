-- Initial conform.cabal generated by cabal init.  For further 
-- documentation, see http://haskell.org/cabal/users-guide/

-- The name of the package.
name:                conform

-- The package version.  See the Haskell package versioning policy (PVP) 
-- for standards guiding when and how versions should be incremented.
-- http://www.haskell.org/haskellwiki/Package_versioning_policy
-- PVP summary:      +-+------- breaking API changes
--                   | | +----- non-breaking API additions
--                   | | | +--- code changes with no API change
version:             0.1.0.0

-- A short (one-line) description of the package.
synopsis:            A package for making conformal mappings and other adaptive maps on C.

-- A longer description of the package.
-- description:         

-- The license under which the package is released.
license:             MIT

-- The file containing the license text.
license-file:        LICENSE

-- The package author(s).
author:              Chris Silvia

-- An email address to which users can send suggestions, bug reports, and 
-- patches.
maintainer:          cps232@cornell.edu

-- A copyright notice.
-- copyright:           

category:            Math

build-type:          Simple

-- Extra files to be distributed with the package, such as examples or a 
-- README.
-- extra-source-files:  

-- Constraint on the version of Cabal needed to build this package.
cabal-version:       >=1.10

library
  ghc-options:         -Wall
  exposed-modules:     ComplexShapes,
                       ComplexPlots
  build-depends:       base >= 4.7 && <5
  hs-source-dirs:      src
  default-language:    Haskell2010
 
executable conform
  ghc-options:         -rtsopts -O2
  hs-source-dirs:      src
  main-is:             Main.hs
  build-depends:       base >= 4.6 && <5,
                       diagrams,
                       Chart,
                       Chart-diagrams,
                       lens,
                       data-default,
                       data-default-class,
                       colour
  default-language:    Haskell2010
